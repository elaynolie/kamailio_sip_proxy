request_route{
    route(REQINIT);
    route(NATMANAGE);
	route(SOURCE_SELECT);
    route(CANCELING);
	if(route(WITHINDLG)){
		route(RELAY);
		exit;
		}
	route(ROUTING);
	if issflagset(FLAG_TO_PROXY){
	if(!route(LOCATION)){        
		route(TO_PSTN);
		}
	}else{
	route(AUTH);
	route(REGISTRAR);
            if!route(ORIGIN_CHECK)exit;
            if(!route(DS))exit;
    }
	route(RELAY);

	}

branch_route[MANAGE_BRANCH]{	
	route(FIX_CONTACT);
    route(SDPMANAGE);
}

onreply_route[MANAGE_REPLY]{
    route(FIX_CONTACT);
    route(SDPMANAGE);
    }

failure_route[MANAGE_FAILURE]{
	  if (src_ip == "77.51.206.229" && $sp == 5065 && t_check_status("401|407")) {
        route(RELAY);
	}
        
    if(is_method("INVITE"))&& t_check_status("401|407"){
        if(uac_auth());
            route(RELAY);
    }else{  
        xlog("L_INFO", "UAC_AUTH(): credentials not found");
}    
   if(t_check_status("40[48]5[0-9][0-9]")){
            if(ds_select_dst("1", "4")){
                xlog("Trying next destination");
                route(RELAY);
            }
        }    
    }

event_route[xhttp:request] {
	xlog("Got a request!");
	xlog("$ru");
	$var(xhttp_prom_root) = $(hu{s.substr,0,8});
	if ($var(xhttp_prom_root) == "/metrics") {
			xlog("Called metrics");
			prom_dispatch();
			xlog("prom_dispatch() called");
			return;
	} else
		xhttp_reply("200", "OK", "text/html",
        		"<html><body>Wrong URL $hu</body></html>");

}

event_route[dispatcher:dst-down] {
    xlog("L_ERR", "Destination down: $rm $ru ($du)\n");
}

event_route[dispatcher:dst-up] {
    xlog("L_ERR", "Destination up: $rm $ru\n");
}


event_route[websocket:closed] {
	xlog("L_INFO", "WebSocket connection from $si:$sp has closed\n");
}


route[SOURCE_SELECT]{
	if(ds_is_from_list(NODES)){  
		if is_method("OPTIONS"){
		sl_send_reply(200,"keepalive");
        exit;
		}
		setsflag(FLAG_TO_PROXY);
        xlog("L_INFO", "FLAG_TO_PROXY selected\n");
		$avp(direction)="direction=internal direction=external";
        return;
        }
        $avp(direction)="direction=external direction=internal";
	}

route[DS]{
            if(!ds_select_dst(NODES,8)){
                xlog("L_INFO", "Not found dispatcher node\n");
                send_reply("404","No destination");
                return(-1);
                }
                return(1);

		    if ($xavp(_dsctx_=>cnt) >= 2) {
       			 $dlg_var(du_primary) = $xavp(_dsdst_[0]=>uri);
        		$dlg_var(du_secondary) = $xavp(_dsdst_[1]=>uri);
    }
}

route[FIX_CONTACT]{
	if!isflagset(FLAG_TO_CARRIER)&&!issflagset(FLAG_TO_PROXY){
		fix_nated_contact();
		return;
		}
		}


route[REQINIT]{
    set_reply_no_connect();
    if(src_ip!=myself) { 
        if($sht(ipban=>$si)!=$null) {
        xdbg("request from blocked IP - $rm from $fu (IP:$si:$sp)\n"); exit;
        }

        if($ua =~ BAD_UA_LIST){   
            sl_send_reply("503", "Service temporary unavailable");
            exit;
            }

         if (!mf_process_maxfwd_header("10")) {
         sl_send_reply("483","Too Many Hops");
            exit;
                }
        if(is_method("OPTIONS")){
		force_rport();
            sl_send_reply("200","Keepalive");
            exit;
            }
            if(!sanity_check("17895", "7")) {
            xlog("Malformed SIP request from $si:$sp\n");
            exit;
            }
            }
}


route[AUTH]{
if(allow_source_address("1")){
xlog("L_INFO", "Access granted to trusted IP $si:$sp\n");
return;
}
if (is_method("REGISTER") || from_uri==myself) {
        if (!auth_check("$fd", "subscriber", "1")) {
                auth_challenge("$fd", "0");
                $sht(AuthCount=>$si) = $sht(AuthCount=>$si) + 1;
                exit;
        }
        if(!is_method("REGISTER|PUBLISH"))
                consume_credentials();
                $sht(AuthCount=>$si) = $null;
}
}


route[REGISTRAR]{
    if(!is_method("REGISTER"))return;
    if(!save("location")){
        sl_reply_error();
    }
    exit;
}

route[NATMANAGE]{
	force_rport();
	if is_request() && is_method("REGISTER"){
		xlog("L_INFO", "received avp BEFORE: $avp(RECEIVED)\n");
		fix_nated_register();
		xlog("L_INFO", "received avp AFTER: $avp(RECEIVED)\n");
		}
}


route[LOCATION]{
    if(!lookup("location")){
        return(-1);
        }
    return(1);
}

route[ROUTING]{
    if(is_method("INVITE|REFER|SUBSCRIBE")&&!has_totag()){
        remove_hf("Route");
        record_route();
    }
    }



route[WITHINDLG]{
	if(!has_totag())return(-1);
	if(loose_route())return(1);

    if(is_method("ACK")){
        if(t_check_trans()){
            return(1);
            }else{
                exit;
            }
     
    }
    
    sl_send_reply("404","Not here");
    exit;
 
}

route[CANCELING]{
    if(is_method("CANCEL")){
        if(!t_check_trans())
            exit;
        }
    }

route[RELAY]{
        if (is_method("INVITE|BYE|SUBSCRIBE|UPDATE")) {
                if(!t_is_set("branch_route")) t_on_branch("MANAGE_BRANCH");
        }
        if (is_method("INVITE|REFER|CANCEL|BYE|SUBSCRIBE|UPDATE")) {
                if(!t_is_set("onreply_route")) t_on_reply("MANAGE_REPLY");
        }
        if (is_method("INVITE")) {
                if(!t_is_set("failure_route")) t_on_failure("MANAGE_FAILURE");
        }
        if (!t_relay()) {
                sl_reply_error();
        }
        exit;
}


route[SDPMANAGE]{
    if($rb==$null||$rb==""){
        return;
    }
    if(!has_body("application/sdp")){
        return;
    }

    if(is_request() && is_method("BYE"))||(is_reply()&&$rs>299){
        rtpengine_delete();
        return;
        xlog("L_INFO", "BYE or SIP CAUSE > 299");
	}
    rtpengine_manage("replace-origin replace-session-connection codec-strip-all codec-except-PCMA codec-except-telephone-event codec-except-G722 codec-except-opus transcode-PCMA codec-mask-G722 codec-mask-opus SIP-source-address $avp(direction)");
	}

route[TO_PSTN]{
if (!starts_with("$rU", "1")) {
   xlog("L_INFO", "add leading prefix 1 to PSTN call\n");
    prefix("1");
    $tu = $ru;
}
    //$fU= "79169613160";
    route(CIDS);
    //dp_translate("1", "$rU/$rU");
    remove_hf("User-Agent");
    $ru= "sip:" + $rU+"@77.51.206.229:5065";
    setsflag(FLAG_TO_CARRIER); 
   }


route[REGISTER_ON_CARRIER]{
    dlg_manage();
    sql_pvquery("ca", "select r_username, auth_username, auth_password, realm, l_domain, r_domain from uacreg", 
    "$avp(fromName),$avp(uname),$avp(passwd),$avp(realm),$avp(l_ipaddr),$avp(dst_ipaddr)");
    uac_replace_from("sip:$avp(fromName)@$avp(dst_ipaddr)");
    uac_replace_to("sip:$tU@$avp(dst_ipaddr)");
    $ru="sip:"+$rU+"@"+$avp(dst_ipaddr);
    remove_hf("Contact");
    $var(contact)="sip:"+$avp(fromName)+"@"+$avp(l_ipaddr);
    insert_hf("Contact: <$var(contact)>\r\n","Call-ID");
    setflag(FLAG_TO_CARRIER);
}

route[CIDS]{
		sql_pvquery("ca", "select callerid from cids where callerid ='$fU'", "$avp(fU)");
		//sql_pvquery("ca", "SELECT callerid from cids order by random() limit 1", "$avp(fU)");
		xlog("L_INFO", "i'm get a number $avp(fU) from DATABASE\n");
		if($avp(fU)!=0) $fU = $avp(fU);
		}

route[IFCASES] {
    switch($rU) {
        case /"^971":
            xlog("L_INFO", "Matched case 971\n");
            $fU = "971424766661";
            $ru = "sip:" + $rU + "@185.68.22.217:5060";
            break;
        case /"^7":
            //$fU = "79161504731";
            //$ru = "sip:" + $rU + "@77.51.206.229:5065";
            route(TO_PSTN);
            break;
        case /"^8":
            //$fU = "79161504731";
            //$ru = "sip:" + $rU + "@77.51.206.229:5065";
            route(TO_PSTN);
            break;
	case "911":
              send_reply("503", "Sorry");
                exit;
            //t_on_failure("MANAGE_FAILURE");
            break;
    case /"^380":
              send_reply("503", "Sorry");
             exit;
            //t_on_failure("MANAGE_FAILURE");
            break;
    case /"^9":
            route(TO_PSTN);
            break;
    case /"^1":
        $fU = "79161504731";
            route(TO_PSTN);
	    break;
    
    case "0890":
	$fU = "79161504731";
	route(TO_PSTN);
	
	default:
            $fU = "79169613160";
            $ru = "sip:" + 1  + $rU + "@77.51.206.229:5065";
	
    }
}

route[SDPHANDLE]{
	if (is_present_hf("User-Agent")) {
    subst_hf("User-Agent", "/dble/Kamailio 5.8/", "a");
	}
}

route[ORIGIN_CHECK]{
    if!allow_source_address(){
        return(-1);
    }
    return(1);
}


route[MODIFY_HEADERS] {
    if(src_ip == "10.70.0.7" && src_port == 5080) {
        if($hdr(User-Agent) =~ "^FreeSWITCH-mod_sofia") {
            remove_hf("Contact");
            $var(contact) = "Contact: <sip:" +$fU+"@"+"66.151.42.203:5060>\r\n";
               remove_hf("To");
            $td = "77.51.206.229:5065";
            $var(new_to) = "To: <sip:" + $tU + "@" + $td + ">\r\n";
            append_hf("$var(new_to)");
        }
    }
}
