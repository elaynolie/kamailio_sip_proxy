####### ROUTES TO PSTN #############
request_route{
    route(REQINIT);
    route(NATMANAGE);
    route(CANCELING);
    if (route(WITHINDLG)){
        route(RELAY);
	exit;
    }
    route(AUTH);
    route(REGISTRAR);
    route(ROUTING);
    if(!route(LOCATION))
        //route(IFCASES);
        route(TO_PSTN);
    route(RELAY);
}


reply_route{


    route(SDPHANDLE);

	if is_present_hf("Contact"){
		route(NATMANAGE);
		}		
    route(NATMANAGE);
    route(SDPMANAGE);
        }


branch_route[MANAGE_BRANCH]{
	remove_hf("Route");
    route(NATMANAGE);
    route(SDPMANAGE);
}

failure_route[MANAGE_FAILURE]{
    if ($rU == "911" || $rU =~ "^380") {
        send_reply("503", "Sorry");
        exit;
    }
	if(t_check_status("3[0-9][0-9]")){
		t_reply("404", "Not found");
		exit;
		}
        if (t_check_status("486|408")) {
        xlog("L_INFO", "Call failed with status $T_reply_code for $rU, redirecting to voicemail\n");
}
        if(t_check_status("40[48]5[0-9][0-9]")){
            if(!ds_select_dst("1", "4")){
                route(RELAY);
            }
        if(is_method("INVITE"))&&t_check_status("401|407"){
            if(uac_auth());
            route(RELAY);
        }else{
            xlog("L_INFO", "UAC_AUTH(): credentials not found");
        }
        
        }    
    }

event_route[xhttp:request] {
    	xlog("Got a request!");
	xlog("$ru");
	$var(xhttp_prom_root) = $(hu{s.substr,0,8});
	if ($var(xhttp_prom_root) == "/metrics") {
			xlog("Called metrics");
			prom_dispatch();
			xlog("prom_dispatch() called");
			return;
	} else
		xhttp_reply("200", "OK", "text/html",
        		"<html><body>Wrong URL $hu</body></html>");
}



event_route[rtpengine:dtmf-event]{
		xlog("L_INFO", "callid: $avp(dtmf_event_callid)\n");
		xlog("L_INFO", "source_tag: $avp(dtmf_event_source_tag)\n");
		xlog("L_INFO", "timestamp: $avp(dtmf_event_timestamp)\n");
		xlog("L_INFO", "dtmf: $avp(dtmf_event)\n");
		}

route[REQINIT]{
    set_reply_no_connect();
    
    if(src_ip!=myself) { 
        if($sht(ipban=>$si)!=$null) {
        xdbg("request from blocked IP - $rm from $fu (IP:$si:$sp)\n"); exit;
        }

        if($ua =~ BAD_UA_LIST){   
            sl_send_reply("503", "Service temporary unavailable");
            exit;
            } 

         if (!mf_process_maxfwd_header("10")) {
         sl_send_reply("483","Too Many Hops");
            exit;
                }
        if(is_method("OPTIONS") && uri==myself && $rU==$null) {
		force_rport();
            sl_send_reply("200","Keepalive");
            exit;
            }
            if(!sanity_check("17895", "7")) {
            xlog("Malformed SIP request from $si:$sp\n");
            exit;
            }
            }
}


route[AUTH]{
    if(!is_method("REGISTER"))return;
    xlog("L_INFO", "REGISTER TO: $si\n");
    if(!auth_check("$fd", "subscriber", "1")){
        auth_challenge("$fd", "0");
        exit;
        }
        consume_credentials();
}

route[REGISTRAR]{
    if(!is_method("REGISTER"))return;
    if(!save("location")){
        sl_reply_error();
    }
    exit;
}

route[NATMANAGE]{
	force_rport();
	if is_request() && is_method("REGISTER"){
		xlog("L_INFO", "received avp BEFORE: $avp(RECEIVED)\n");
		fix_nated_register();
		xlog("L_INFO", "received avp AFTER: $avp(RECEIVED)\n");
		}
		//fix_nated_contact();
}


route[LOCATION]{
    if(!lookup("location")){
        return(-1);
        }
    return(1);
}

route[ROUTING]{
    if(is_method("INVITE|SUBSCRIBE")&&!has_totag()){
        remove_hf("Route");
        record_route();
    }
    }


route[DIALOG] {
    if (is_method("INVITE") && has_totag()) {
	xlog("L_INFO", "Start a dialog handling grom $fU to $tU\n");
	setflag(4);
	dlg_manage();
        set_dlg_profile("userDialogs", "$fU");
        set_dlg_profile("userDialogs", "$tU");
        
        get_profile_size("userDialogs", "$fU", "$var(dialog_size)");
	$sht(dialog_limit=>DIALOG_LIMIT) = 1;
	if ($var(dialog_size) > $sht(dialog_limit=>DIALOG_LIMIT)) {
	    unset_dlg_profile("userDialogs", "$fU");
            unset_dlg_profile("userDialogs", "$tU");
            sl_send_reply(412, "Max dialogs now, try later");
            exit;
        }
    }
}


route[WITHINDLG]{
	if(!has_totag())return(-1);
	if(loose_route())return(1);
    if(is_method("ACK")){
        dlg_manage();
        if(t_check_trans()){
            return(1);
            }else{
                exit;
            }
    }
    sl_send_reply("404","Not here");
    exit;
}
route[CANCELING]{
    if(is_method("CANCEL")){
        if(!t_check_trans())
            exit;
        }
    }


route[SDPMANAGE]{
     $var(rtp_media) = "replace-origin replace-session-connection SIP-source-address codec-except-opus transcode-PCMA codec-transcode=PCMA,PCMU codec-mask-G722 codec-mask-opus  media-address=66.151.42.203";
    if($rb==$null||$rb==""){
        return;
    }
    if(is_request() && is_method("BYE"))||(is_reply()&&$rs>299){
        rtpengine_manage();
        return;
        xlog("L_INFO", "BYE or SIP CAUSE > 299");
}
rtpengine_manage($var(rtp_media));
    if(pcre_match($dP, "(?i)wss|ws")){
        rtpengine_manage("replace-origin ICE=force SDES=off UDP/TLS/RTP/SAVPF codec-mask=all codec-transcode=PCMA,PCMU media-address=66.151.42.203");
    }
}




route[RELAY]{
	if(!t_is_set("branch_route"))t_on_branch("MANAGE_BRANCH");
	
	if(!t_relay()){
        sl_reply_error();
    }
    exit;
}


route[TO_PSTN]{
if (!starts_with("$rU", "1")) {
   xlog("L_INFO", "add leading prefix 1 to PSTN call\n");
    prefix("1");
    $tu = $ru;
}
    setflag(4);
    //$fU= "79161504731";
    route(CIDS);
    //dp_translate("1", "$rU/$rU");
    $ru= "sip:" + $rU+"@77.51.206.229:5065";
    //$ru= "sip:" +$rU+"@10.77.15.209:5060";
     //$du="sip:77.51.206.229:5060;r2=on;lr";  // set destination uri
     //$fs = "udp:77.106.69.53:5060"; // for multi socket servers 
   }





route[REGISTER_ON_CARRIER]{
    dlg_manage();
    sql_pvquery("ca", "select r_username, auth_username, auth_password, realm, l_domain, r_domain from uacreg", 
    "$avp(fromName),$avp(uname),$avp(passwd),$avp(realm),$avp(l_ipaddr),$avp(dst_ipaddr)");
    uac_replace_from("sip:$avp(fromName)@$avp(dst_ipaddr)");
    uac_replace_to("sip:$tU@$avp(dst_ipaddr)");
    $ru="sip:"+$rU+"@"+$avp(dst_ipaddr);
    remove_hf("Contact");
    $var(contact)="sip:"+$avp(fromName)+"@"+$avp(l_ipaddr);
    insert_hf("Contact: <$var(contact)>\r\n","Call-ID");
    setflag(FLAG_TO_CARRIER);
}



route[FIX_CONTACT]{
    if is_reply()||!isflagset(FLAG_TO_CARRIER){
        fix_nated_contact();
    }
}



route[DS]{
if(!ds_select_dst("100", "10")) {
    send_reply("404", "No destination");
    exit;
}
}


route[CIDS]{
		sql_pvquery("ca", "select callerid from cids where callerid ='$fU'", "$avp(fU)");
		//sql_pvquery("ca", "SELECT callerid from cids order by random() limit 1", "$avp(fU)");
		xlog("L_INFO", "i'm get a number $avp(fU) from DATABASE\n");
		if($avp(fU)!=0) $fU = $avp(fU);
		}

route[CARRIERROUTE]{
    $fU = "79161504731";
    if(!cr_route("default", "carriers", "$rU",  "$rU", "call_id")){
            return(-1);   
    }
   return(1);
}

route[IFCASES] {
    switch($rU) {
        case /"^971":
            xlog("L_INFO", "Matched case 971\n");
            $fU = "971424766661";
            $ru = "sip:" + $rU + "@185.68.22.217:5060";
            break;
        case /"^7":
            //$fU = "79161504731";
            //$ru = "sip:" + $rU + "@77.51.206.229:5065";
            route(TO_PSTN);
            break;
        case /"^8":
            //$fU = "79161504731";
            //$ru = "sip:" + $rU + "@77.51.206.229:5065";
            route(TO_PSTN);
            break;
	case "911":
              send_reply("503", "Sorry");
                exit;
            //t_on_failure("MANAGE_FAILURE");
            break;
    case /"^380":
              send_reply("503", "Sorry");
             exit;
            //t_on_failure("MANAGE_FAILURE");
            break;
    case /"^9":
            route(TO_PSTN);
            break;
    case /"^1":
        $fU = "79161504731";
            //ds_select_dst("1", "4");
            route(TO_PSTN);
	    break;
    
    case "0890":
	$fU = "79161504731";
	route(TO_PSTN);
	
	default:
            $fU = "79161504731";
            $ru = "sip:" + 1  + $rU + "@77.51.206.229:5065";
	
    }
}

route[SDPHANDLE]{
        if (pcre_match("$ua", "(?i)^dble")) {
       xlog("L_INFO", "User-Agent matches\n");
        }

	if (is_present_hf("User-Agent")) {
    subst_hf("User-Agent", "/dble/KAMAILIO EU/", "a");
	}
}


